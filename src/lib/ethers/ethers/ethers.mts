'use strict';

import {
  BaseContract,
  Contract,
  ContractFactory,
} from '../contracts/index.mjs';

import { BigNumber, FixedNumber } from '../bignumber/index.mjs';

import { Signer, VoidSigner } from '../abstract-signer/index.mjs';
import { Wallet } from '../wallet/index.mjs';

import * as constants from '../constants/index.mjs';

import * as providers from '../providers/index.mjs';
import { getDefaultProvider } from '../providers/index.mjs';

import { Wordlist, wordlists } from '../wordlists/index.mjs';

import * as utils from './utils.mjs';

import { ErrorCode as errors, Logger } from '../logger/index.mjs';

////////////////////////
// Types

import type {
  TypedDataDomain,
  TypedDataField,
} from '../abstract-signer/index.mjs';
import { BigNumberish } from '../bignumber/index.mjs';
import { Bytes, BytesLike, Signature } from '../bytes/index.mjs';
import { Transaction, UnsignedTransaction } from '../transactions/index.mjs';

////////////////////////
// Compile-Time Constants

// This is generated by "npm run dist"
import { version } from './_version.mjs';

const logger = new Logger(version);

////////////////////////
// Types

import {
  ContractFunction,
  ContractReceipt,
  ContractTransaction,
  Event,
  EventFilter,
  Overrides,
  PayableOverrides,
  CallOverrides,
  PopulatedTransaction,
  ContractInterface,
} from '../contracts/index.mjs';

////////////////////////
// Exports

export {
  Signer,
  Wallet,
  VoidSigner,
  getDefaultProvider,
  providers,
  BaseContract,
  Contract,
  ContractFactory,
  BigNumber,
  FixedNumber,
  constants,
  errors,
  logger,
  utils,
  wordlists,

  ////////////////////////
  // Compile-Time Constants
  version,

  ////////////////////////
  // Types
  ContractFunction,
  ContractReceipt,
  ContractTransaction,
  Event,
  EventFilter,
  Overrides,
  PayableOverrides,
  CallOverrides,
  PopulatedTransaction,
  ContractInterface,
  TypedDataDomain,
  TypedDataField,
  BigNumberish,
  Bytes,
  BytesLike,
  Signature,
  Transaction,
  UnsignedTransaction,
  Wordlist,
};
